[{"E:\\move\\client\\client\\src\\index.tsx":"1","E:\\move\\client\\client\\src\\App.tsx":"2","E:\\move\\client\\client\\src\\test.tsx":"3","E:\\move\\client\\client\\src\\services\\index.tsx":"4","E:\\move\\client\\client\\src\\services\\Types.tsx":"5","E:\\move\\client\\client\\src\\testRedux.tsx":"6","E:\\move\\client\\client\\src\\redux\\index.tsx":"7","E:\\move\\client\\client\\src\\redux\\reducer\\index.tsx":"8","E:\\move\\client\\client\\src\\redux\\reducer\\MovieReducer.tsx":"9","E:\\move\\client\\client\\src\\redux\\reducer\\Types.tsx":"10","E:\\move\\client\\client\\src\\redux\\saga\\MovieSaga.tsx":"11","E:\\move\\client\\client\\src\\pages\\PageIndex.tsx":"12","E:\\move\\client\\client\\src\\pages\\moviePages\\AddMovie.tsx":"13","E:\\move\\client\\client\\src\\pages\\moviePages\\MoviList.tsx":"14","E:\\move\\client\\client\\src\\components\\ComMovieTable.tsx":"15","E:\\move\\client\\client\\src\\components\\ComUpload.tsx":"16","E:\\move\\client\\client\\src\\components\\ComMovieForm.tsx":"17","E:\\move\\client\\client\\src\\pages\\moviePages\\EditMovie.tsx":"18"},{"size":373,"mtime":1607499938371,"results":"19","hashOfConfig":"20"},{"size":389,"mtime":1607347732752,"results":"21","hashOfConfig":"20"},{"size":956,"mtime":1607244818002,"results":"22","hashOfConfig":"20"},{"size":2193,"mtime":1607600670942,"results":"23","hashOfConfig":"20"},{"size":965,"mtime":1607240810688,"results":"24","hashOfConfig":"20"},{"size":157,"mtime":1607334001916,"results":"25","hashOfConfig":"20"},{"size":397,"mtime":1607346912645,"results":"26","hashOfConfig":"20"},{"size":166,"mtime":1607261003851,"results":"27","hashOfConfig":"20"},{"size":3261,"mtime":1607601660593,"results":"28","hashOfConfig":"20"},{"size":2385,"mtime":1607602174549,"results":"29","hashOfConfig":"20"},{"size":2224,"mtime":1607602791040,"results":"30","hashOfConfig":"20"},{"size":2213,"mtime":1607604114969,"results":"31","hashOfConfig":"20"},{"size":1572,"mtime":1607584511328,"results":"32","hashOfConfig":"20"},{"size":271,"mtime":1607347546702,"results":"33","hashOfConfig":"20"},{"size":9336,"mtime":1607602732313,"results":"34","hashOfConfig":"20"},{"size":1766,"mtime":1607501205045,"results":"35","hashOfConfig":"20"},{"size":4840,"mtime":1607588314777,"results":"36","hashOfConfig":"20"},{"size":2716,"mtime":1607589900153,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13usbz4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\move\\client\\client\\src\\index.tsx",[],["82","83"],"E:\\move\\client\\client\\src\\App.tsx",[],"E:\\move\\client\\client\\src\\test.tsx",[],"E:\\move\\client\\client\\src\\services\\index.tsx",[],"E:\\move\\client\\client\\src\\services\\Types.tsx",[],["84","85"],"E:\\move\\client\\client\\src\\testRedux.tsx",[],["86","87"],"E:\\move\\client\\client\\src\\redux\\index.tsx",[],"E:\\move\\client\\client\\src\\redux\\reducer\\index.tsx",[],"E:\\move\\client\\client\\src\\redux\\reducer\\MovieReducer.tsx",["88","89","90"],"import { IMovie, SearchCondition } from \"../../services/Types\";\r\nimport { DeleteActionTypeAction, MovieActionType, MovieActionTypes, MovieData, MovieState, SetIsHotClassicAction, SetIsLoadingActon, SetMovieDataAction, SetSearchConditionAction } from \"./Types\";\r\n\r\nconst initMovieStata:MovieState ={\r\n    movieData:{\r\n        count:0,\r\n        data:[]\r\n    },\r\n    searchCondition:{\r\n        key:\"\",\r\n        page:1,\r\n        size:10\r\n    },\r\n    isLoading:false\r\n}\r\n/**\r\n * 分页查询的reducer\r\n * @param movieState \r\n * @param moiveAction \r\n */\r\nexport function movieReducer(movieState = initMovieStata,moiveAction:MovieActionTypes):MovieState{\r\n    switch(moiveAction.type){\r\n       case MovieActionType.SET_MOVIE_DATA:\r\n           return setMovieDataReducer(movieState,moiveAction);\r\n       case MovieActionType.SET_SEARCH_COMDITION:\r\n           return setSearchConditionReducer(movieState,moiveAction);\r\n        case MovieActionType.SET_IS_LOADING:\r\n           return setIsLoadingReducer(movieState,moiveAction);\r\n        case MovieActionType.DELETE_BY_ID:\r\n           return deleteByIdReducer(movieState,moiveAction);\r\n        case MovieActionType.SET_IS_HOT_CLASSIC:\r\n            return setIsHotAndClassic(movieState,moiveAction);\r\n       default:\r\n       return movieState;\r\n    }\r\n}\r\n/**\r\n * 根据id修改isHot 或者是 isClassic\r\n * @param movieState \r\n * @param moiveAction \r\n */\r\nfunction setIsHotAndClassic(state:MovieState,moiveAction:SetIsHotClassicAction){\r\n    const dataArr = state.movieData.data;\r\n    const newData = dataArr.map(item =>{\r\n        if(item.id === moiveAction.payload.id){\r\n            //判断是设置isHot 还是 isClassic\r\n            if(moiveAction.payload.flage === \"isClassic\"){\r\n                 item.isClassic = moiveAction.payload.value;\r\n            }else if(moiveAction.payload.flage === \"isHot\"){\r\n                 item.isHot = moiveAction.payload.value;\r\n            }\r\n        } \r\n        return item;\r\n    })\r\n    const newMovieData: MovieData = {\r\n        count: state.movieData.count,\r\n        data: newData as any\r\n    }\r\n    console.log(newMovieData,\"---newMovieData---setIsHotAndClassic(state--\");\r\n    return{\r\n        ... state,\r\n        movieData:newMovieData\r\n    }\r\n}\r\n/**\r\n * 根据id删除一个数据\r\n */\r\nfunction deleteByIdReducer(state:MovieState,moiveAction:DeleteActionTypeAction){\r\n   const dataArr = state.movieData.data;\r\n   const newData = dataArr.filter(item=>item.id !== moiveAction.payload.id);\r\n   const newMovieData: MovieData = {\r\n       count: state.movieData.count,\r\n       data: newData as any\r\n   }\r\n   return{\r\n    ...state,\r\n    movieData:newMovieData\r\n   }\r\n}\r\n// 设置movieData的reducer\r\nfunction setMovieDataReducer(state:MovieState,action:SetMovieDataAction):MovieState{\r\n     return {\r\n         ...state,\r\n         movieData : action.payload\r\n     }\r\n}\r\n// 设置搜索条件reducer\r\nfunction  setSearchConditionReducer(state:MovieState,action:SetSearchConditionAction):MovieState{\r\n    return {\r\n        ...state,\r\n        searchCondition : action.payload\r\n    }\r\n}\r\n// 设置是否正在加载reducer\r\nfunction setIsLoadingReducer(state:MovieState,action:SetIsLoadingActon):MovieState{\r\n    return{\r\n        ...state,\r\n        isLoading : action.payload\r\n    }\r\n}","E:\\move\\client\\client\\src\\redux\\reducer\\Types.tsx",[],"E:\\move\\client\\client\\src\\redux\\saga\\MovieSaga.tsx",["91","92","93"],"import {takeEvery,select, put, call, takeLatest}  from \"redux-saga/effects\";\r\nimport { MovieServices } from \"../../services\";\r\nimport {ResponseType} from \"../../services/Types\"\r\nimport { DeleteActionTypeAction, EffectDeleteActionType, EffectIsHotClassicAction, MovieActionType } from \"../reducer/Types\";\r\n\r\nexport function * movieSaga(){\r\n    // 处理数据查询的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_MOVIE_DADA as any,getMovieDataEffects);\r\n    // 处理删除数据的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_DELETE_BY_ID as any,deleteByIdEffects);\r\n    // 处理修改isHot 或者是 isClassic 的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_IS_HOT_CLASSIC as any,setIsHotClassicEffects);\r\n}\r\nfunction * setIsHotClassicEffects(action:EffectIsHotClassicAction){\r\n    yield put({type : MovieActionType.SET_IS_LOADING,payload:true})\r\n    const updateResult:ResponseType =  yield call(MovieServices.changIsHotAndClassic as any,action.payload.flage,action.payload.value,action.payload.id);\r\n    if(updateResult.status === 200){\r\n        yield put({type:MovieActionType.SET_IS_HOT_CLASSIC, payload:action.payload});\r\n   }\r\n   yield put({type : MovieActionType.SET_IS_LOADING,payload:false})\r\n}\r\nfunction *deleteByIdEffects(action:EffectDeleteActionType){\r\n   const deletResult:ResponseType =  yield call(MovieServices.deleteMovie as any,action.payload.id);\r\n   console.log(\" const deletResult----\",deletResult);\r\n   if(deletResult.status === 200){\r\n         yield put({type:MovieActionType. DELETE_BY_ID, payload:{id:action.payload.id}});\r\n   }\r\n}\r\n//处理数据查询的附影响\r\nfunction *getMovieDataEffects(){\r\n     //获得查询信息\r\n    const movieState =  yield select((state)=>{\r\n        return state.movieState.searchCondition;\r\n    });\r\n    // 将正在加载设置成false\r\n    yield put({type:MovieActionType.SET_IS_LOADING,payload:true})\r\n    //根据条件查询\r\n    const find =  yield call(MovieServices.findMovieBySearch as any,movieState);\r\n     // 将正在加载设置成true\r\n    if(find.status===200){\r\n        yield put({type:MovieActionType.SET_MOVIE_DATA,payload:find.data});\r\n    }\r\n     yield put({type:MovieActionType.SET_IS_LOADING,payload:false})\r\n}","E:\\move\\client\\client\\src\\pages\\PageIndex.tsx",[],"E:\\move\\client\\client\\src\\pages\\moviePages\\AddMovie.tsx",[],"E:\\move\\client\\client\\src\\pages\\moviePages\\MoviList.tsx",[],"E:\\move\\client\\client\\src\\components\\ComMovieTable.tsx",["94","95","96","97","98","99"],"import { Table,Switch,Input, message, Space, Button,Image, Popconfirm  } from 'antd'\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport React, { Component, Dispatch } from 'react'\r\nimport {connect}from \"react-redux\"\r\nimport { MovieActionType, MovieActionTypes, MovieState } from '../redux/reducer/Types';\r\nimport { RootState } from '../redux/Types';\r\nimport { IMovie } from '../services/Types';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { MovieServices } from '../services';\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n/**\r\n * 当前组件需要的事件初始化的时候从服务器获得数据\r\n */\r\ninterface ComMovieTableEvent{\r\n    /**\r\n     * 在组件初始化请求服务器加载数据\r\n     */\r\n    fetchMovieData?:()=>void;\r\n    /**\r\n     * 向后台发送数据根据id修改 \"isHot\"|\"isClassic\"\r\n     */\r\n    changIsHotAndClassic:(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number)=>void ;\r\n     /**\r\n      * 根据分页组件设置搜索条件\r\n      */\r\n    onPageChange:(page:number,size:number,key:string)=>void;\r\n    /**\r\n     * 根据id删除数据\r\n     */\r\n    onDeleteById:(id:number)=>void;\r\n}\r\n/**\r\n * 当前state的数据类型\r\n */\r\ninterface StateType{\r\n    isLoading: boolean;\r\n    searchKey: string\r\n}\r\n class ComMovieTable extends Component<MovieState &  ComMovieTableEvent & RouteComponentProps,StateType> {\r\n    state:StateType={\r\n        isLoading : this.props.isLoading,\r\n        searchKey: this.props.searchCondition.key\r\n    };\r\n    searchInputRef:React.RefObject<any>= React.createRef();\r\n    componentDidMount(){\r\n        if(this.props.fetchMovieData){\r\n            this.props.fetchMovieData();\r\n        }\r\n    };\r\n    /**\r\n     * 根据条件查询数据\r\n     */\r\n    findByCondition(key:string){\r\n        this.props.onPageChange(1,10,key);\r\n        //   重新查询数据\r\n        if(this.props.fetchMovieData){\r\n          this.props.fetchMovieData();\r\n        }\r\n    }\r\n    /**\r\n     * 点击分页器修改查询条件并且重新获得数据\r\n     * @param pagination \r\n     */\r\n   async  changHand(pagination:TablePaginationConfig){\r\n          const oldSearch = this.props.searchCondition;\r\n          let page = pagination.current || oldSearch.page;\r\n          let size = pagination.pageSize || oldSearch.size;\r\n          let key = this.props.searchCondition.key;\r\n          this.props.onPageChange(page!,size!,key);\r\n          //   重新查询数据\r\n          if(this.props.fetchMovieData){\r\n            this.props.fetchMovieData();\r\n          }\r\n    }\r\n    /**\r\n     * 分页器配置\r\n     */\r\n    getPagination():TablePaginationConfig{\r\n       return{\r\n           total: this.props.movieData.count,\r\n           current: this.props.searchCondition.page,\r\n           pageSize: this.props.searchCondition.size,\r\n           position:['bottomCenter'],\r\n        //    showSizeChanger: false\r\n       }\r\n    }\r\n    /**\r\n     * 修改\"isHot\"|\"isClassic\" 并设置isLoading\r\n     * @param flage \r\n     * @param value \r\n     * @param id \r\n     */\r\n    changeIsHotAndIsClassic(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number){\r\n         this.props.changIsHotAndClassic(flage,value,id);\r\n    }\r\n    getColumns():ColumnsType<IMovie>{\r\n        return[\r\n            {title:\"电影封面\",dataIndex:\"poster\",\r\n            render:(text, record, index)=>{\r\n\r\n                return( <Image\r\n                    width={50}\r\n                    style={{cursor:\"pointer\"}}\r\n                    src={record.poster||\"/upload/nopic.jpg\"}\r\n                  />)\r\n            }},\r\n            {title:\"电影名字\",dataIndex:\"name\",\r\n             filterDropdown:(data:FilterDropdownProps)=>{\r\n                 return (\r\n                    <div style={{ padding: 8 }}>\r\n                    <Input\r\n                      ref={this.searchInputRef}\r\n                      defaultValue={this.state.searchKey}\r\n                      onBlur={(event)=>{\r\n                          this.setState({\r\n                              ...this.state,\r\n                              searchKey:event.target.defaultValue\r\n                          })\r\n                      }}\r\n                      style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    />\r\n                    <Space>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() =>{\r\n                            this.findByCondition(this.state.searchKey);\r\n                            data.clearFilters&& data.clearFilters();\r\n                        }}\r\n                      >\r\n                        搜索\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() =>{\r\n                            this.findByCondition(\"\");\r\n                            this.searchInputRef.current.setValue(\"\");\r\n                            data.clearFilters&& data.clearFilters();\r\n                        }}\r\n                      >\r\n                        重置\r\n                      </Button>\r\n                    </Space>\r\n                  </div>\r\n                 ); \r\n             },\r\n            //  filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n            },\r\n            {title:\"类型\",dataIndex:\"types\"},\r\n            {title:\"上映地区\",dataIndex:\"areas\"},\r\n            {title:\"时长\",dataIndex:\"timeLog\"},\r\n            {title:\"是否热映\",dataIndex:\"isHot\",\r\n            render:(text, record, index)=>{\r\n                return (<>\r\n                    <Switch\r\n                    checkedChildren={<CheckOutlined />}\r\n                    unCheckedChildren={<CloseOutlined />}\r\n                    defaultChecked={record.isHot == \"true\"}\r\n                    checked={record.isHot == \"true\"}\r\n                    onChange= { async (checked:any)=>{\r\n                         checked = checked+\"\"\r\n                         this.changeIsHotAndIsClassic(\"isHot\",checked,record.id!);\r\n                    }}\r\n                    />\r\n                </>)\r\n            }\r\n            },\r\n            {title:\"是否经典\",dataIndex:\"isClassic\",\r\n                render:(text, record, index)=>{\r\n                    return (<>\r\n                        <Switch\r\n                        checkedChildren={<CheckOutlined />}\r\n                        unCheckedChildren={<CloseOutlined />}\r\n                        defaultChecked={record.isClassic == \"true\"}\r\n                        checked={record.isClassic == \"true\"}\r\n                        onChange={(checked:any)=>{\r\n                            checked = checked+\"\"\r\n                            this.changeIsHotAndIsClassic(\"isClassic\",checked,record.id!);\r\n                        }}\r\n                        />\r\n                    </>)\r\n                }\r\n            },\r\n            {title:\"电影描述\",dataIndex:\"description\"},\r\n            {title:\"操作\",render:(text, record, index)=>{\r\n                return (<>\r\n                     <Button size=\"small\" type=\"primary\" onClick={()=>{\r\n                         this.props.history.push({pathname:\"/edit\",state:record.id})\r\n                     }}>修改</Button>\r\n                      <Popconfirm\r\n                        title={`确定删除--${record.name}--吗`}\r\n                        onConfirm={()=>{\r\n                            this.props.onDeleteById(+record.id!);\r\n                        }}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button size=\"small\"  type=\"primary\" danger>\r\n                        删除\r\n                        </Button>\r\n                    </Popconfirm>\r\n                   \r\n                </>);\r\n            }},\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table  onChange={this.changHand.bind(this)} pagination={ this.getPagination()} loading={this.props.isLoading || this.state.isLoading} dataSource={this.props.movieData.data}  rowKey={columns => +columns.id!} columns={this.getColumns()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/**\r\n * 映射store中的satate 到组件\r\n * @param state \r\n */\r\nfunction mapStateToProps(state:RootState):MovieState{\r\n  return{\r\n    ...state.movieState,\r\n    searchCondition:{\r\n        ...state.movieState.searchCondition\r\n    }\r\n  };\r\n}\r\n/**\r\n * 映射dispatch 到组件\r\n * @param dispath \r\n */\r\nfunction mapDispatchToProps(dispath:Dispatch<MovieActionTypes>):ComMovieTableEvent{\r\n   return {\r\n       fetchMovieData(){\r\n           dispath({type : MovieActionType.EFFECT_MOVIE_DADA});\r\n       },\r\n       onDeleteById(id:number){\r\n          dispath({type : MovieActionType.EFFECT_DELETE_BY_ID,payload:{id}});\r\n       },\r\n       onPageChange(page:number,size:number,key:string){\r\n           dispath({type:MovieActionType.SET_SEARCH_COMDITION,payload:{page,size,key}})\r\n       },\r\n       changIsHotAndClassic(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number){\r\n                dispath({type : MovieActionType.EFFECT_IS_HOT_CLASSIC ,payload:{flage,value,id}});\r\n        }\r\n        \r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ComMovieTable));\r\n\r\n","E:\\move\\client\\client\\src\\components\\ComUpload.tsx",["100"],"import React, { useState } from 'react';\r\nimport { Modal, Upload } from 'antd';\r\nimport { UploadChangeParam } from 'antd/lib/upload';\r\ninterface ComUploadProps{\r\n    value?:string;\r\n    onChange?:(responseUrl:string) => void;\r\n}\r\nlet i = 1;\r\nexport  const ComUpload: React.FC<ComUploadProps> =  function (props) {\r\n    const fileList = [\r\n        {\r\n          name: props.value,\r\n          status:  props.value,\r\n          url: props.value\r\n        },\r\n      ];\r\n      const [preview,setPreview] =   useState({\r\n            previewVisible:false \r\n        });\r\n    return (\r\n        <>\r\n        <Modal\r\n          visible={preview.previewVisible}\r\n          footer={null}\r\n          onCancel={()=>{\r\n            setPreview({...preview,previewVisible:false});\r\n          }}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={props.value} />\r\n        </Modal>\r\n         <Upload\r\n            accept=\".jpg,.jpeg,.png,.gif\"\r\n            name=\"upload\"\r\n            action=\"/upload\"\r\n            listType=\"picture-card\"\r\n            fileList={props.value?fileList as any:[]}\r\n            onPreview={()=>{\r\n                setPreview({...preview,previewVisible:true});\r\n            }}\r\n            onRemove={()=>{\r\n                if(props.onChange){\r\n                    props.onChange(\"\");\r\n                    return;\r\n                }\r\n            }}\r\n            onChange={(data:UploadChangeParam)=>{\r\n                 //得到后台响应的数据\r\n                if(props.onChange&& data.fileList[0]&&data.fileList[0].response){\r\n                    props.onChange(data.fileList[0].response.data.msg);\r\n                }\r\n             }}\r\n        >\r\n            {props.value ?\"\":<div>+上传图片</div>}\r\n      </Upload>\r\n        </>\r\n    )\r\n}\r\n","E:\\move\\client\\client\\src\\components\\ComMovieForm.tsx",["101"],"import { Form, Input, Button, Checkbox, InputNumber, Radio} from 'antd';\r\nimport { FormInterface } from 'antd/lib/form';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React from  'react';\r\nimport { ComUpload } from './ComUpload';\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n\r\n  const options = [\r\n    { label: '喜剧', value: '喜剧' },\r\n    { label: '励志', value: '励志' },\r\n    { label: '感动', value: '感动' },\r\n     { label: '科幻', value: '科幻' },\r\n     { label: '警匪', value: '警匪' },\r\n  ];\r\n  const areasOptions = [\r\n    { label: '香港', value: '香港' },\r\n    { label: '日本', value: '日本' },\r\n    { label: '大陆', value: '大陆' },\r\n     { label: '东亚', value: '东亚' },\r\n     { label: '欧美', value: '欧美' },\r\n  ];\r\nexport interface InitialValues{\r\n   areas?: string[]; \r\n   description?:string;\r\n   id?:number;\r\n   isClassic?: \"false\"|\"true\";\r\n   isHot?: \"false\"|\"true\";\r\n   name?: string;\r\n   poster?: string;\r\n   timeLog?: number;\r\n   types?: string[];\r\n}\r\n interface MovieFormType {\r\n     id?:string;\r\n     onValidataPass:(data:any)=>void;\r\n     initialValues?:InitialValues\r\n }\r\n export  class  ComMovieFormInput extends React.Component<MovieFormType> {  \r\n    formRef:React.RefObject<any> = React.createRef();\r\n    passValidata(data:any){\r\n        data.areas = JSON.stringify(data.areas);\r\n        data.types = JSON.stringify(data.types);\r\n        this.props.onValidataPass(data);\r\n    }\r\n    componentDidUpdate(){\r\n        this.formRef.current && this.formRef.current.setFieldsValue(this.props.initialValues);\r\n    }\r\n   render(){\r\n    return (\r\n        <>\r\n            <Form\r\n                ref = {this.formRef}\r\n                style={{width:\"50%\"}}\r\n                {...layout}\r\n                onFinish={this.passValidata.bind(this)}\r\n                initialValues={this.props.initialValues}\r\n            >\r\n               <Form.Item\r\n                  label=\"电影名\"\r\n                  name=\"name\"\r\n                  rules={[{ required: true, message: '电影名不能为空!' }]}\r\n               >\r\n                   <Input/>\r\n               </Form.Item>\r\n               <Form.Item\r\n                  label=\"电影封面\"\r\n                  name=\"poster\"\r\n               >\r\n                   <ComUpload/>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影类型\"\r\n                  name=\"types\"\r\n                  rules={[{ required: true, message: '电影类型不能为空!' }]}\r\n               >\r\n                     <Checkbox.Group options={options} />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"上映地区\"\r\n                  name=\"areas\"\r\n                  rules={[{ required: true, message: '上映地区不能为空!' }]}\r\n               >\r\n                     <Checkbox.Group options={areasOptions}  />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影时长\"\r\n                  name=\"timeLog\"\r\n               >\r\n                    <InputNumber size=\"large\" min={1} max={100000}  />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"是否热映\"\r\n                  name=\"isHot\"\r\n               >\r\n                    <Radio.Group  buttonStyle=\"solid\">\r\n                            <Radio.Button value=\"true\">是</Radio.Button>\r\n                            <Radio.Button value=\"false\">否</Radio.Button>\r\n                   </Radio.Group>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"是否经典\"\r\n                  name=\"isClassic\"\r\n               >\r\n                     <Radio.Group  buttonStyle=\"solid\">\r\n                            <Radio.Button value=\"true\">是</Radio.Button>\r\n                            <Radio.Button value=\"false\">否</Radio.Button>\r\n                     </Radio.Group>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影描述\"\r\n                  name=\"description\"\r\n               >\r\n                    <TextArea\r\n                        placeholder=\"电影咋样呀 说说你的感受 ！！\"\r\n                        autoSize={{ minRows: 3, maxRows: 5 }}\r\n                        />\r\n               </Form.Item>\r\n\r\n\r\n               <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    提交\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n   }\r\n    \r\n}\r\n// areas: \"[日本,西安]\"\r\n// description: null\r\n// id: 2\r\n// isClassic: \"false\"\r\n// isHot: \"false\"\r\n// name: \"不好看的电影\"\r\n// poster: \"www.badul.ocm\"\r\n// timeLog: 400\r\n// types: \"[励志,感动]\"\r\n","E:\\move\\client\\client\\src\\pages\\moviePages\\EditMovie.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":16},{"ruleId":"110","severity":1,"message":"114","line":1,"column":18,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"115","severity":1,"message":"116","line":61,"column":12,"nodeType":"117","messageId":"118","endLine":61,"endColumn":13,"fix":"119"},{"ruleId":"110","severity":1,"message":"120","line":1,"column":38,"nodeType":"112","messageId":"113","endLine":1,"endColumn":48},{"ruleId":"110","severity":1,"message":"121","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":26,"column":26,"nodeType":"124","messageId":"118","endLine":26,"endColumn":55,"fix":"125"},{"ruleId":"110","severity":1,"message":"126","line":1,"column":30,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},{"ruleId":"110","severity":1,"message":"127","line":9,"column":10,"nodeType":"112","messageId":"113","endLine":9,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":160,"column":50,"nodeType":"130","messageId":"131","endLine":160,"endColumn":52},{"ruleId":"128","severity":1,"message":"129","line":161,"column":43,"nodeType":"130","messageId":"131","endLine":161,"endColumn":45},{"ruleId":"128","severity":1,"message":"129","line":176,"column":58,"nodeType":"130","messageId":"131","endLine":176,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":177,"column":51,"nodeType":"130","messageId":"131","endLine":177,"endColumn":53},{"ruleId":"110","severity":1,"message":"132","line":8,"column":5,"nodeType":"112","messageId":"113","endLine":8,"endColumn":6},{"ruleId":"110","severity":1,"message":"133","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],["134"],["135"],"@typescript-eslint/no-unused-vars","'IMovie' is defined but never used.","Identifier","unusedVar","'SearchCondition' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"136","text":"137"},"'takeLatest' is defined but never used.","'DeleteActionTypeAction' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property DELETE_BY_ID.","MemberExpression",{"range":"138","text":"139"},"'message' is defined but never used.","'MovieServices' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is assigned a value but never used.","'FormInterface' is defined but never used.","no-global-assign","no-unsafe-negation",[2144,2145],"",[1466,1468],"."]