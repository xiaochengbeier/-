{"version":3,"sources":["services/Types.tsx","components/ComUpload.tsx","components/ComMovieForm.tsx","services/index.tsx","redux/reducer/Types.tsx","pages/moviePages/AddMovie.tsx","components/ComMovieTable.tsx","pages/moviePages/MoviList.tsx","pages/moviePages/EditMovie.tsx","pages/PageIndex.tsx","redux/reducer/MovieReducer.tsx","redux/reducer/index.tsx","redux/saga/MovieSaga.tsx","redux/index.tsx","App.tsx","index.tsx"],"names":["API","ComUpload","props","fileList","name","value","status","url","useState","previewVisible","preview","setPreview","visible","footer","onCancel","alt","style","width","src","accept","action","listType","onPreview","onRemove","onChange","data","response","msg","layout","labelCol","span","wrapperCol","tailLayout","offset","options","label","areasOptions","ComMovieFormInput","formRef","React","createRef","areas","JSON","stringify","types","this","onValidataPass","current","setFieldsValue","initialValues","ref","onFinish","passValidata","bind","Item","rules","required","message","Group","size","min","max","buttonStyle","Button","placeholder","autoSize","minRows","maxRows","type","htmlType","Component","axios","interceptors","use","res","MovieActionType","MovieServices","movie","post","MOVIE_API","addResult","id","delete","deleteResult","put","updataResult","get","findResult","console","log","search","params","flage","updataMovie","isHot","isClassic","AddMovie","state","isloading","setState","addMovie","success","history","replace","timeLog","className","getinitialValues","ComMovieTable","isLoading","searchKey","searchCondition","key","searchInputRef","fetchMovieData","onPageChange","pagination","oldSearch","page","pageSize","total","movieData","count","position","changIsHotAndClassic","title","dataIndex","render","text","record","index","cursor","poster","filterDropdown","padding","defaultValue","onBlur","event","target","marginBottom","display","onClick","findByCondition","clearFilters","setValue","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","checked","a","changeIsHotAndIsClassic","push","pathname","onConfirm","onDeleteById","okText","cancelText","danger","changHand","getPagination","loading","dataSource","rowKey","columns","getColumns","connect","movieState","dispath","EFFECT_MOVIE_DADA","EFFECT_DELETE_BY_ID","payload","SET_SEARCH_COMDITION","EFFECT_IS_HOT_CLASSIC","withRouter","MoviList","EditMovie","undefined","location","parseInt","then","rdata","findMovieById","parse","err","split","dataInit","description","Header","Layout","Sider","Content","PageIndex","defaultSelectedKeys","listen","to","theme","selectedKeys","overflow","path","component","MovieList","from","initMovieStata","setIsHotAndClassic","moiveAction","newData","map","item","newMovieData","deleteByIdReducer","filter","setMovieDataReducer","setSearchConditionReducer","setIsLoadingReducer","reducers","combineReducers","SET_MOVIE_DATA","SET_IS_LOADING","DELETE_BY_ID","SET_IS_HOT_CLASSIC","movieSaga","setIsHotClassicEffects","deleteByIdEffects","getMovieDataEffects","takeEvery","call","deleteMovie","deletResult","select","findMovieBySearch","find","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","App","MovieIndex","ReactDOM","locale","zhCN","document","getElementById"],"mappings":"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","file":"static/js/main.a52babd7.chunk.js","sourcesContent":["/**\r\n * 电影对象应有的字段\r\n */\r\nexport interface IMovie{\r\n     /**\r\n      * 电影名字\r\n      */\r\n     name:string;\r\n     /**\r\n      * 电影类型\r\n      */\r\n     types:string;\r\n     /**\r\n      * 上映地区\r\n      */\r\n     areas:string;\r\n     /**\r\n      * 电影时间长\r\n      */\r\n     timeLog:number;\r\n    /**\r\n     *  是否热映\r\n     */\r\n     isHot:string;\r\n     /**\r\n      * 是否是经典\r\n      */\r\n     isClassic:string;\r\n     /**\r\n      * 电影描述\r\n      */\r\n     description?:string;\r\n     /**\r\n      * 电影封面\r\n      */\r\n     poster?:string;\r\n     /**\r\n      * 电影id\r\n      */\r\n     id?:number;\r\n}\r\n/**\r\n * 服务器响应数据类型\r\n */\r\nexport type  ResponseType ={\r\n   status:500|200,\r\n   msg:\"fail\"|\"success\",\r\n   data:object\r\n} \r\n/**\r\n * api 接口字段\r\n */\r\nexport enum API{\r\n    MOVIE_API=\"/api/move\"\r\n}\r\n\r\nexport abstract  class SearchCondition{\r\n    key:string=\"\";\r\n    page:number=1;\r\n    size:number = 10;\r\n}","import React, { useState } from 'react';\r\nimport { Modal, Upload } from 'antd';\r\nimport { UploadChangeParam } from 'antd/lib/upload';\r\ninterface ComUploadProps{\r\n    value?:string;\r\n    onChange?:(responseUrl:string) => void;\r\n}\r\nlet i = 1;\r\nexport  const ComUpload: React.FC<ComUploadProps> =  function (props) {\r\n    const fileList = [\r\n        {\r\n          name: props.value,\r\n          status:  props.value,\r\n          url: props.value\r\n        },\r\n      ];\r\n      const [preview,setPreview] =   useState({\r\n            previewVisible:false \r\n        });\r\n    return (\r\n        <>\r\n        <Modal\r\n          visible={preview.previewVisible}\r\n          footer={null}\r\n          onCancel={()=>{\r\n            setPreview({...preview,previewVisible:false});\r\n          }}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={props.value} />\r\n        </Modal>\r\n         <Upload\r\n            accept=\".jpg,.jpeg,.png,.gif\"\r\n            name=\"upload\"\r\n            action=\"/upload\"\r\n            listType=\"picture-card\"\r\n            fileList={props.value?fileList as any:[]}\r\n            onPreview={()=>{\r\n                setPreview({...preview,previewVisible:true});\r\n            }}\r\n            onRemove={()=>{\r\n                if(props.onChange){\r\n                    props.onChange(\"\");\r\n                    return;\r\n                }\r\n            }}\r\n            onChange={(data:UploadChangeParam)=>{\r\n                 //得到后台响应的数据\r\n                if(props.onChange&& data.fileList[0]&&data.fileList[0].response){\r\n                    props.onChange(data.fileList[0].response.data.msg);\r\n                }\r\n             }}\r\n        >\r\n            {props.value ?\"\":<div>+上传图片</div>}\r\n      </Upload>\r\n        </>\r\n    )\r\n}\r\n","import { Form, Input, Button, Checkbox, InputNumber, Radio} from 'antd';\r\nimport { FormInterface } from 'antd/lib/form';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React from  'react';\r\nimport { ComUpload } from './ComUpload';\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n\r\n  const options = [\r\n    { label: '喜剧', value: '喜剧' },\r\n    { label: '励志', value: '励志' },\r\n    { label: '感动', value: '感动' },\r\n     { label: '科幻', value: '科幻' },\r\n     { label: '警匪', value: '警匪' },\r\n  ];\r\n  const areasOptions = [\r\n    { label: '香港', value: '香港' },\r\n    { label: '日本', value: '日本' },\r\n    { label: '大陆', value: '大陆' },\r\n     { label: '东亚', value: '东亚' },\r\n     { label: '欧美', value: '欧美' },\r\n  ];\r\nexport interface InitialValues{\r\n   areas?: string[]; \r\n   description?:string;\r\n   id?:number;\r\n   isClassic?: \"false\"|\"true\";\r\n   isHot?: \"false\"|\"true\";\r\n   name?: string;\r\n   poster?: string;\r\n   timeLog?: number;\r\n   types?: string[];\r\n}\r\n interface MovieFormType {\r\n     id?:string;\r\n     onValidataPass:(data:any)=>void;\r\n     initialValues?:InitialValues\r\n }\r\n export  class  ComMovieFormInput extends React.Component<MovieFormType> {  \r\n    formRef:React.RefObject<any> = React.createRef();\r\n    passValidata(data:any){\r\n        data.areas = JSON.stringify(data.areas);\r\n        data.types = JSON.stringify(data.types);\r\n        this.props.onValidataPass(data);\r\n    }\r\n    componentDidUpdate(){\r\n        this.formRef.current && this.formRef.current.setFieldsValue(this.props.initialValues);\r\n    }\r\n   render(){\r\n    return (\r\n        <>\r\n            <Form\r\n                ref = {this.formRef}\r\n                style={{width:\"50%\"}}\r\n                {...layout}\r\n                onFinish={this.passValidata.bind(this)}\r\n                initialValues={this.props.initialValues}\r\n            >\r\n               <Form.Item\r\n                  label=\"电影名\"\r\n                  name=\"name\"\r\n                  rules={[{ required: true, message: '电影名不能为空!' }]}\r\n               >\r\n                   <Input/>\r\n               </Form.Item>\r\n               <Form.Item\r\n                  label=\"电影封面\"\r\n                  name=\"poster\"\r\n               >\r\n                   <ComUpload/>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影类型\"\r\n                  name=\"types\"\r\n                  rules={[{ required: true, message: '电影类型不能为空!' }]}\r\n               >\r\n                     <Checkbox.Group options={options} />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"上映地区\"\r\n                  name=\"areas\"\r\n                  rules={[{ required: true, message: '上映地区不能为空!' }]}\r\n               >\r\n                     <Checkbox.Group options={areasOptions}  />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影时长\"\r\n                  name=\"timeLog\"\r\n               >\r\n                    <InputNumber size=\"large\" min={1} max={100000}  />\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"是否热映\"\r\n                  name=\"isHot\"\r\n               >\r\n                    <Radio.Group  buttonStyle=\"solid\">\r\n                            <Radio.Button value=\"true\">是</Radio.Button>\r\n                            <Radio.Button value=\"false\">否</Radio.Button>\r\n                   </Radio.Group>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"是否经典\"\r\n                  name=\"isClassic\"\r\n               >\r\n                     <Radio.Group  buttonStyle=\"solid\">\r\n                            <Radio.Button value=\"true\">是</Radio.Button>\r\n                            <Radio.Button value=\"false\">否</Radio.Button>\r\n                     </Radio.Group>\r\n               </Form.Item>\r\n\r\n               <Form.Item\r\n                  label=\"电影描述\"\r\n                  name=\"description\"\r\n               >\r\n                    <TextArea\r\n                        placeholder=\"电影咋样呀 说说你的感受 ！！\"\r\n                        autoSize={{ minRows: 3, maxRows: 5 }}\r\n                        />\r\n               </Form.Item>\r\n\r\n\r\n               <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    提交\r\n                </Button>\r\n            </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n   }\r\n    \r\n}\r\n// areas: \"[日本,西安]\"\r\n// description: null\r\n// id: 2\r\n// isClassic: \"false\"\r\n// isHot: \"false\"\r\n// name: \"不好看的电影\"\r\n// poster: \"www.badul.ocm\"\r\n// timeLog: 400\r\n// types: \"[励志,感动]\"\r\n","import axios from \"axios\";\r\nimport { API, IMovie,ResponseType,SearchCondition } from \"./Types\";\r\n// 添加axios拦截器\r\naxios.interceptors.response.use((res)=>{\r\n  if(res.data){\r\n    return res.data;\r\n  }\r\n  return res;\r\n});\r\nexport class MovieServices{\r\n    /**\r\n     * 添加movie对象\r\n     * @param movie  movie对象\r\n     */\r\n    static async addMovie(movie:IMovie):Promise<ResponseType>{\r\n      const addResult =  await  axios.post<any,ResponseType>(API.MOVIE_API,movie);\r\n      return addResult;\r\n    }\r\n    /**\r\n     * 根据id删除数据\r\n     * @param id 删除的数据id\r\n     */\r\n    static async deleteMovie(id:number){\r\n      const deleteResult =  await axios.delete<any,ResponseType>(API.MOVIE_API+\"/\"+id);\r\n      return deleteResult;\r\n    }\r\n    \r\n    /**\r\n     * 根据非id修改数据\r\n     * @param id    修改的数据id\r\n     * @param data  修改的数据字段\r\n     */\r\n    static async updataMovie(id:number,data:object){\r\n      const updataResult =   await axios.put<any,ResponseType>(API.MOVIE_API+\"/\"+id,data);\r\n      return updataResult;\r\n    }\r\n   /**\r\n    * 根据id查询数据\r\n    * @param id 查询id\r\n    */\r\n    static async findMovieById(id:number){\r\n     const findResult =   await axios.get<any,ResponseType>(API.MOVIE_API+\"/\"+id);\r\n     console.log(id,\"ididid=====>\",findResult);\r\n     return findResult;\r\n    }\r\n\r\n    /**\r\n     * 根据条件查询数据\r\n     * @param search 查询条件\r\n     */\r\n    static async findMovieBySearch(search:SearchCondition){\r\n      console.log(JSON.stringify(search));\r\n      const findResult =   await axios.get<any,ResponseType>(API.MOVIE_API,{params:search});\r\n      return findResult;\r\n    }\r\n    /**\r\n     * 根据id修改 \"isHot\"|\"isClassic\"\r\n     * @param flage   确定是\"isHot\" 还是 \"isClassic\"\r\n     * @param value   true or fasle\r\n     * @param id      数据id\r\n     */\r\n    static async  changIsHotAndClassic(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number){\r\n      if(flage === \"isHot\"){\r\n        return  await  MovieServices.updataMovie(id,{isHot:value});\r\n      }if(flage === \"isClassic\"){\r\n        return   await  MovieServices.updataMovie(id,{isClassic:value});\r\n      }\r\n  }\r\n}","import { IMovie , SearchCondition } from \"../../services/Types\";\r\n/**\r\n * 分页查询到的数据类型\r\n */\r\nexport interface MovieData{\r\n    count:number,\r\n    data: IMovie[]\r\n}\r\n/**\r\n * movie state 类型\r\n */\r\nexport interface MovieState {\r\n    movieData: MovieData,\r\n    searchCondition:SearchCondition,\r\n    isLoading:boolean\r\n}\r\n/**\r\n * 所有有关moviestate action的类型\r\n */\r\nexport enum MovieActionType{\r\n    SET_MOVIE_DATA=\"SET_MOVIE_DATA_ACTION\",\r\n    EFFECT_MOVIE_DADA=\"EFFECT_MOVIE_DADA_ACTION\",\r\n    SET_SEARCH_COMDITION=\"SET_SEARCH_COMDITION_ACTION\",\r\n    SET_IS_LOADING=\"SET_IS_LOADING_ACTION\",\r\n    DELETE_BY_ID=\"DELETE_BY_ID__ACTION\",\r\n    EFFECT_DELETE_BY_ID=\"EFFECT_DELETE_BY_ID__ACTION\",\r\n    SET_IS_HOT_CLASSIC=\"SET_IS_HOT_CLASSIC_ACTION\",\r\n    EFFECT_IS_HOT_CLASSIC=\"EFFECT_IS_HOT_CLASSIC_ACTION\"\r\n}\r\n/**\r\n * 根据id删除某个数据\r\n */\r\nexport interface DeleteActionTypeAction{\r\n    type: MovieActionType.DELETE_BY_ID,\r\n    payload:{id:number}\r\n}\r\n/**\r\n * 根据id删除某个数据的附影响\r\n */\r\nexport interface EffectDeleteActionType{\r\n    type: MovieActionType.EFFECT_DELETE_BY_ID\r\n    payload:{id:number}\r\n}\r\n/**\r\n * 修改isHotAndClassic 附影响\r\n */\r\nexport interface EffectIsHotClassicAction{\r\n    type: MovieActionType.EFFECT_IS_HOT_CLASSIC,\r\n    payload:{flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number}\r\n}\r\n/**\r\n * 修改isHotAndClassic\r\n */\r\nexport interface SetIsHotClassicAction{\r\n    type: MovieActionType.SET_IS_HOT_CLASSIC,\r\n    payload:{flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number}\r\n}\r\nexport interface EffectMovieData{\r\n    type : MovieActionType.EFFECT_MOVIE_DADA;\r\n}\r\n/**\r\n * 设置movieData的action类型\r\n */\r\nexport interface SetMovieDataAction{\r\n    type:MovieActionType.SET_MOVIE_DATA,\r\n    payload:MovieData\r\n}\r\n/**\r\n * 设置 searchCondition 的action类型\r\n */\r\nexport interface SetSearchConditionAction{\r\n    type:MovieActionType.SET_SEARCH_COMDITION,\r\n    payload:SearchCondition\r\n}\r\n/**\r\n * 设置 isLoading的 Action\r\n */\r\nexport interface SetIsLoadingActon{\r\n    type:MovieActionType.SET_IS_LOADING,\r\n    payload:boolean\r\n}\r\n/**\r\n * 有关设置MovieStata 的 action的类型\r\n */\r\nexport type MovieActionTypes =EffectIsHotClassicAction| EffectDeleteActionType|DeleteActionTypeAction|SetIsHotClassicAction| SetMovieDataAction | SetSearchConditionAction|SetIsLoadingActon|EffectMovieData;","import { message, Spin } from 'antd';\r\nimport React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ComMovieFormInput, InitialValues } from '../../components/ComMovieForm'\r\nimport { MovieServices } from '../../services'\r\n\r\nexport default class AddMovie extends Component<RouteComponentProps> {\r\n    state={\r\n        isloading:false\r\n    }\r\n    async onValidataPass(data: Required<InitialValues>){\r\n      this.setState({...this.state, isloading:true})\r\n      const  addResult =   await MovieServices.addMovie(data as any);\r\n      //添加数据成功\r\n      if(addResult.status === 200){\r\n        this.setState({...this.state, isloading:false})\r\n        message.success(\"添加--\"+data.name+\"--成功\", 2, ()=>{\r\n            this.props.history.replace(\"/list\");\r\n        })\r\n      }else{//添加数据失败\r\n        this.setState({...this.state, isloading:false})\r\n        message.success(\"添加--\"+data.name+\"--失败\", 2)\r\n      }\r\n    }\r\n    getinitialValues():InitialValues{\r\n        return{\r\n            timeLog:30,\r\n            isClassic:\"false\",\r\n            isHot:\"false\",\r\n            types:[\"励志\",\"喜剧\"],\r\n            areas:[\"欧美\",\"香港\"]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                 {this.state.isloading && <div className=\"addMovieOver\">\r\n                    <Spin/>\r\n                  </div>}\r\n                 <ComMovieFormInput initialValues={this.getinitialValues()} onValidataPass={this.onValidataPass.bind(this)}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import { Table,Switch,Input, message, Space, Button,Image, Popconfirm  } from 'antd'\r\nimport { ColumnsType, TablePaginationConfig } from 'antd/lib/table';\r\nimport React, { Component, Dispatch } from 'react'\r\nimport {connect}from \"react-redux\"\r\nimport { MovieActionType, MovieActionTypes, MovieState } from '../redux/reducer/Types';\r\nimport { RootState } from '../redux/Types';\r\nimport { IMovie } from '../services/Types';\r\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { MovieServices } from '../services';\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n/**\r\n * 当前组件需要的事件初始化的时候从服务器获得数据\r\n */\r\ninterface ComMovieTableEvent{\r\n    /**\r\n     * 在组件初始化请求服务器加载数据\r\n     */\r\n    fetchMovieData?:()=>void;\r\n    /**\r\n     * 向后台发送数据根据id修改 \"isHot\"|\"isClassic\"\r\n     */\r\n    changIsHotAndClassic:(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number)=>void ;\r\n     /**\r\n      * 根据分页组件设置搜索条件\r\n      */\r\n    onPageChange:(page:number,size:number,key:string)=>void;\r\n    /**\r\n     * 根据id删除数据\r\n     */\r\n    onDeleteById:(id:number)=>void;\r\n}\r\n/**\r\n * 当前state的数据类型\r\n */\r\ninterface StateType{\r\n    isLoading: boolean;\r\n    searchKey: string\r\n}\r\n class ComMovieTable extends Component<MovieState &  ComMovieTableEvent & RouteComponentProps,StateType> {\r\n    state:StateType={\r\n        isLoading : this.props.isLoading,\r\n        searchKey: this.props.searchCondition.key\r\n    };\r\n    searchInputRef:React.RefObject<any>= React.createRef();\r\n    componentDidMount(){\r\n        if(this.props.fetchMovieData){\r\n            this.props.fetchMovieData();\r\n        }\r\n    };\r\n    /**\r\n     * 根据条件查询数据\r\n     */\r\n    findByCondition(key:string){\r\n        this.props.onPageChange(1,10,key);\r\n        //   重新查询数据\r\n        if(this.props.fetchMovieData){\r\n          this.props.fetchMovieData();\r\n        }\r\n    }\r\n    /**\r\n     * 点击分页器修改查询条件并且重新获得数据\r\n     * @param pagination \r\n     */\r\n   async  changHand(pagination:TablePaginationConfig){\r\n          const oldSearch = this.props.searchCondition;\r\n          let page = pagination.current || oldSearch.page;\r\n          let size = pagination.pageSize || oldSearch.size;\r\n          let key = this.props.searchCondition.key;\r\n          this.props.onPageChange(page!,size!,key);\r\n          //   重新查询数据\r\n          if(this.props.fetchMovieData){\r\n            this.props.fetchMovieData();\r\n          }\r\n    }\r\n    /**\r\n     * 分页器配置\r\n     */\r\n    getPagination():TablePaginationConfig{\r\n       return{\r\n           total: this.props.movieData.count,\r\n           current: this.props.searchCondition.page,\r\n           pageSize: this.props.searchCondition.size,\r\n           position:['bottomCenter'],\r\n        //    showSizeChanger: false\r\n       }\r\n    }\r\n    /**\r\n     * 修改\"isHot\"|\"isClassic\" 并设置isLoading\r\n     * @param flage \r\n     * @param value \r\n     * @param id \r\n     */\r\n    changeIsHotAndIsClassic(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number){\r\n         this.props.changIsHotAndClassic(flage,value,id);\r\n    }\r\n    getColumns():ColumnsType<IMovie>{\r\n        return[\r\n            {title:\"电影封面\",dataIndex:\"poster\",\r\n            render:(text, record, index)=>{\r\n\r\n                return( <Image\r\n                    width={50}\r\n                    style={{cursor:\"pointer\"}}\r\n                    src={record.poster||\"/upload/nopic.jpg\"}\r\n                  />)\r\n            }},\r\n            {title:\"电影名字\",dataIndex:\"name\",\r\n             filterDropdown:(data:FilterDropdownProps)=>{\r\n                 return (\r\n                    <div style={{ padding: 8 }}>\r\n                    <Input\r\n                      ref={this.searchInputRef}\r\n                      defaultValue={this.state.searchKey}\r\n                      onBlur={(event)=>{\r\n                          this.setState({\r\n                              ...this.state,\r\n                              searchKey:event.target.defaultValue\r\n                          })\r\n                      }}\r\n                      style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    />\r\n                    <Space>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() =>{\r\n                            this.findByCondition(this.state.searchKey);\r\n                            data.clearFilters&& data.clearFilters();\r\n                        }}\r\n                      >\r\n                        搜索\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() =>{\r\n                            this.findByCondition(\"\");\r\n                            this.searchInputRef.current.setValue(\"\");\r\n                            data.clearFilters&& data.clearFilters();\r\n                        }}\r\n                      >\r\n                        重置\r\n                      </Button>\r\n                    </Space>\r\n                  </div>\r\n                 ); \r\n             },\r\n            //  filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n            },\r\n            {title:\"类型\",dataIndex:\"types\"},\r\n            {title:\"上映地区\",dataIndex:\"areas\"},\r\n            {title:\"时长\",dataIndex:\"timeLog\"},\r\n            {title:\"是否热映\",dataIndex:\"isHot\",\r\n            render:(text, record, index)=>{\r\n                return (<>\r\n                    <Switch\r\n                    checkedChildren={<CheckOutlined />}\r\n                    unCheckedChildren={<CloseOutlined />}\r\n                    defaultChecked={record.isHot == \"true\"}\r\n                    checked={record.isHot == \"true\"}\r\n                    onChange= { async (checked:any)=>{\r\n                         checked = checked+\"\"\r\n                         this.changeIsHotAndIsClassic(\"isHot\",checked,record.id!);\r\n                    }}\r\n                    />\r\n                </>)\r\n            }\r\n            },\r\n            {title:\"是否经典\",dataIndex:\"isClassic\",\r\n                render:(text, record, index)=>{\r\n                    return (<>\r\n                        <Switch\r\n                        checkedChildren={<CheckOutlined />}\r\n                        unCheckedChildren={<CloseOutlined />}\r\n                        defaultChecked={record.isClassic == \"true\"}\r\n                        checked={record.isClassic == \"true\"}\r\n                        onChange={(checked:any)=>{\r\n                            checked = checked+\"\"\r\n                            this.changeIsHotAndIsClassic(\"isClassic\",checked,record.id!);\r\n                        }}\r\n                        />\r\n                    </>)\r\n                }\r\n            },\r\n            {title:\"电影描述\",dataIndex:\"description\"},\r\n            {title:\"操作\",render:(text, record, index)=>{\r\n                return (<>\r\n                     <Button size=\"small\" type=\"primary\" onClick={()=>{\r\n                         this.props.history.push({pathname:\"/edit\",state:record.id})\r\n                     }}>修改</Button>\r\n                      <Popconfirm\r\n                        title={`确定删除--${record.name}--吗`}\r\n                        onConfirm={()=>{\r\n                            this.props.onDeleteById(+record.id!);\r\n                        }}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button size=\"small\"  type=\"primary\" danger>\r\n                        删除\r\n                        </Button>\r\n                    </Popconfirm>\r\n                   \r\n                </>);\r\n            }},\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table  onChange={this.changHand.bind(this)} pagination={ this.getPagination()} loading={this.props.isLoading || this.state.isLoading} dataSource={this.props.movieData.data}  rowKey={columns => +columns.id!} columns={this.getColumns()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/**\r\n * 映射store中的satate 到组件\r\n * @param state \r\n */\r\nfunction mapStateToProps(state:RootState):MovieState{\r\n  return{\r\n    ...state.movieState,\r\n    searchCondition:{\r\n        ...state.movieState.searchCondition\r\n    }\r\n  };\r\n}\r\n/**\r\n * 映射dispatch 到组件\r\n * @param dispath \r\n */\r\nfunction mapDispatchToProps(dispath:Dispatch<MovieActionTypes>):ComMovieTableEvent{\r\n   return {\r\n       fetchMovieData(){\r\n           dispath({type : MovieActionType.EFFECT_MOVIE_DADA});\r\n       },\r\n       onDeleteById(id:number){\r\n          dispath({type : MovieActionType.EFFECT_DELETE_BY_ID,payload:{id}});\r\n       },\r\n       onPageChange(page:number,size:number,key:string){\r\n           dispath({type:MovieActionType.SET_SEARCH_COMDITION,payload:{page,size,key}})\r\n       },\r\n       changIsHotAndClassic(flage:\"isHot\"|\"isClassic\",value:\"true\"|\"false\",id:number){\r\n                dispath({type : MovieActionType.EFFECT_IS_HOT_CLASSIC ,payload:{flage,value,id}});\r\n        }\r\n        \r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ComMovieTable));\r\n\r\n","import React, { Component } from 'react'\r\nimport ComMovieTable from '../../components/ComMovieTable'\r\nexport default class MoviList extends Component {\r\n    render() {\r\n        return (\r\n           <>\r\n              <ComMovieTable/>\r\n           </>\r\n        )\r\n    }\r\n}\r\n","import { message } from 'antd'\r\nimport React from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { ComMovieFormInput, InitialValues} from '../../components/ComMovieForm'\r\nimport { MovieServices } from '../../services'\r\n\r\nexport  class  EditMovie extends React.Component<RouteComponentProps> {\r\n    state={\r\n        movie: undefined\r\n    }\r\n    updataMovie(data:any){\r\n        if(this.props.location.state){\r\n            MovieServices.updataMovie(parseInt(this.props.location.state as any),data).then((rdata)=>{\r\n                if(rdata.status === 200){\r\n                    message.success(\"修改--\"+data.name+\"--成功\", 1, ()=>{\r\n                        this.props.history.replace(\"/list\");\r\n                    })\r\n                  }else{//修改数据失败\r\n                    message.success(\"修改--\"+data.name+\"--失败\", 1)\r\n                  }\r\n            });\r\n        }\r\n    }\r\n    //根据传入的id查询数据\r\n    componentDidMount(){\r\n        if(this.props.location.state){\r\n            MovieServices.findMovieById( parseInt(this.props.location.state as any)).then((data:any)=>{\r\n               if(data.status === 200){\r\n                //    replace(/(\\[|\\])/g,\"\").split(\",\")\r\n                   let areas= null;\r\n                   let types = null;\r\n                   try{\r\n                    areas =  JSON.parse(data.data.areas);\r\n                    types = JSON.parse(data.data.types);\r\n                   } catch(err){\r\n                    areas =  data.data.areas.replace(/(\\[|\\])/g,\"\").split(\",\")\r\n                    types =   data.data.types.replace(/(\\[|\\])/g,\"\").split(\",\")\r\n                   }\r\n                  \r\n                   const dataInit:InitialValues = {\r\n                       name:data.data.name,\r\n                       areas:areas,\r\n                       types:types,\r\n                       timeLog:data.data.timeLog,\r\n                       isClassic:data.data.isClassic,\r\n                       isHot:data.data.isHot,\r\n                       poster:data.data.poster,\r\n                       description:data.data.description\r\n                   };\r\n                  \r\n                   this.setState({\r\n                       ...this.state,\r\n                       movie:dataInit\r\n                   });\r\n               }\r\n            });\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        console.log(this.state);\r\n        return (\r\n            <>\r\n              {/* {this.state.movie &&<ComMovieFormInput onValidataPass={()=>{}} initialValues={this.state.movie}/>} */}\r\n              <ComMovieFormInput onValidataPass={this.updataMovie.bind(this)} initialValues={this.state.movie}/>\r\n            </>\r\n        )\r\n    }\r\n  \r\n}\r\n","import React, { Component } from 'react'\r\nimport {Layout,Menu} from \"antd\"\r\nimport AddMovie  from \"./moviePages/AddMovie\"\r\nimport MovieList from \"./moviePages/MoviList\"\r\nimport {Link, NavLink,Redirect,Switch,Route, RouteComponentProps}from \"react-router-dom\"\r\nimport { EditMovie } from './moviePages/EditMovie'\r\nconst {Header,Sider,Content} = Layout;\r\nexport default class PageIndex extends Component<RouteComponentProps> {\r\n    state ={\r\n        defaultSelectedKeys:[\"/list\"]\r\n    }\r\n    componentDidMount(){\r\n        this.props.history.listen((location,action)=>{\r\n            console.log(location);\r\n            this.setState({\r\n                ...this.state ,\r\n                defaultSelectedKeys: [location.pathname]\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"layout_wraper\">\r\n            <Layout>\r\n                <Header>\r\n                    <Link to=\"/\">猫眼电影管理系统</Link>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                       <Menu\r\n                        theme=\"dark\"\r\n                        selectedKeys={this.state.defaultSelectedKeys}\r\n                       >\r\n                           <Menu.Item key=\"/list\">\r\n                                <NavLink to=\"/list\" >电影列表</NavLink>\r\n                           </Menu.Item>\r\n                           <Menu.Item key=\"/add\">\r\n                                <NavLink to=\"/add\">添加学生</NavLink>\r\n                           </Menu.Item>\r\n                       </Menu>\r\n                    </Sider>\r\n                    <Content style={{padding:\"30px 0px 0px 30px\",overflow:\"auto\"}}>\r\n                            <Switch>\r\n                                <Route path=\"/list\" component={MovieList}/>\r\n                                <Route path=\"/add\" component={AddMovie}/>\r\n                                <Route path=\"/edit\" component={EditMovie}/>\r\n                                <Redirect to=\"/list\"  from=\"/\" />\r\n                                \r\n                            </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { IMovie, SearchCondition } from \"../../services/Types\";\r\nimport { DeleteActionTypeAction, MovieActionType, MovieActionTypes, MovieData, MovieState, SetIsHotClassicAction, SetIsLoadingActon, SetMovieDataAction, SetSearchConditionAction } from \"./Types\";\r\n\r\nconst initMovieStata:MovieState ={\r\n    movieData:{\r\n        count:0,\r\n        data:[]\r\n    },\r\n    searchCondition:{\r\n        key:\"\",\r\n        page:1,\r\n        size:10\r\n    },\r\n    isLoading:false\r\n}\r\n/**\r\n * 分页查询的reducer\r\n * @param movieState \r\n * @param moiveAction \r\n */\r\nexport function movieReducer(movieState = initMovieStata,moiveAction:MovieActionTypes):MovieState{\r\n    switch(moiveAction.type){\r\n       case MovieActionType.SET_MOVIE_DATA:\r\n           return setMovieDataReducer(movieState,moiveAction);\r\n       case MovieActionType.SET_SEARCH_COMDITION:\r\n           return setSearchConditionReducer(movieState,moiveAction);\r\n        case MovieActionType.SET_IS_LOADING:\r\n           return setIsLoadingReducer(movieState,moiveAction);\r\n        case MovieActionType.DELETE_BY_ID:\r\n           return deleteByIdReducer(movieState,moiveAction);\r\n        case MovieActionType.SET_IS_HOT_CLASSIC:\r\n            return setIsHotAndClassic(movieState,moiveAction);\r\n       default:\r\n       return movieState;\r\n    }\r\n}\r\n/**\r\n * 根据id修改isHot 或者是 isClassic\r\n * @param movieState \r\n * @param moiveAction \r\n */\r\nfunction setIsHotAndClassic(state:MovieState,moiveAction:SetIsHotClassicAction){\r\n    const dataArr = state.movieData.data;\r\n    const newData = dataArr.map(item =>{\r\n        if(item.id === moiveAction.payload.id){\r\n            //判断是设置isHot 还是 isClassic\r\n            if(moiveAction.payload.flage === \"isClassic\"){\r\n                 item.isClassic = moiveAction.payload.value;\r\n            }else if(moiveAction.payload.flage === \"isHot\"){\r\n                 item.isHot = moiveAction.payload.value;\r\n            }\r\n        } \r\n        return item;\r\n    })\r\n    const newMovieData: MovieData = {\r\n        count: state.movieData.count,\r\n        data: newData as any\r\n    }\r\n    console.log(newMovieData,\"---newMovieData---setIsHotAndClassic(state--\");\r\n    return{\r\n        ... state,\r\n        movieData:newMovieData\r\n    }\r\n}\r\n/**\r\n * 根据id删除一个数据\r\n */\r\nfunction deleteByIdReducer(state:MovieState,moiveAction:DeleteActionTypeAction){\r\n   const dataArr = state.movieData.data;\r\n   const newData = dataArr.filter(item=>item.id !== moiveAction.payload.id);\r\n   const newMovieData: MovieData = {\r\n       count: state.movieData.count,\r\n       data: newData as any\r\n   }\r\n   return{\r\n    ...state,\r\n    movieData:newMovieData\r\n   }\r\n}\r\n// 设置movieData的reducer\r\nfunction setMovieDataReducer(state:MovieState,action:SetMovieDataAction):MovieState{\r\n     return {\r\n         ...state,\r\n         movieData : action.payload\r\n     }\r\n}\r\n// 设置搜索条件reducer\r\nfunction  setSearchConditionReducer(state:MovieState,action:SetSearchConditionAction):MovieState{\r\n    return {\r\n        ...state,\r\n        searchCondition : action.payload\r\n    }\r\n}\r\n// 设置是否正在加载reducer\r\nfunction setIsLoadingReducer(state:MovieState,action:SetIsLoadingActon):MovieState{\r\n    return{\r\n        ...state,\r\n        isLoading : action.payload\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {movieReducer} from \"./MovieReducer\";\r\nconst reducers = combineReducers({movieState:movieReducer});\r\nexport {reducers};","import {takeEvery,select, put, call, takeLatest}  from \"redux-saga/effects\";\r\nimport { MovieServices } from \"../../services\";\r\nimport {ResponseType} from \"../../services/Types\"\r\nimport { DeleteActionTypeAction, EffectDeleteActionType, EffectIsHotClassicAction, MovieActionType } from \"../reducer/Types\";\r\n\r\nexport function * movieSaga(){\r\n    // 处理数据查询的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_MOVIE_DADA as any,getMovieDataEffects);\r\n    // 处理删除数据的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_DELETE_BY_ID as any,deleteByIdEffects);\r\n    // 处理修改isHot 或者是 isClassic 的附影响\r\n    yield takeEvery(MovieActionType.EFFECT_IS_HOT_CLASSIC as any,setIsHotClassicEffects);\r\n}\r\nfunction * setIsHotClassicEffects(action:EffectIsHotClassicAction){\r\n    yield put({type : MovieActionType.SET_IS_LOADING,payload:true})\r\n    const updateResult:ResponseType =  yield call(MovieServices.changIsHotAndClassic as any,action.payload.flage,action.payload.value,action.payload.id);\r\n    if(updateResult.status === 200){\r\n        yield put({type:MovieActionType.SET_IS_HOT_CLASSIC, payload:action.payload});\r\n   }\r\n   yield put({type : MovieActionType.SET_IS_LOADING,payload:false})\r\n}\r\nfunction *deleteByIdEffects(action:EffectDeleteActionType){\r\n   const deletResult:ResponseType =  yield call(MovieServices.deleteMovie as any,action.payload.id);\r\n   console.log(\" const deletResult----\",deletResult);\r\n   if(deletResult.status === 200){\r\n         yield put({type:MovieActionType. DELETE_BY_ID, payload:{id:action.payload.id}});\r\n   }\r\n}\r\n//处理数据查询的附影响\r\nfunction *getMovieDataEffects(){\r\n     //获得查询信息\r\n    const movieState =  yield select((state)=>{\r\n        return state.movieState.searchCondition;\r\n    });\r\n    // 将正在加载设置成false\r\n    yield put({type:MovieActionType.SET_IS_LOADING,payload:true})\r\n    //根据条件查询\r\n    const find =  yield call(MovieServices.findMovieBySearch as any,movieState);\r\n     // 将正在加载设置成true\r\n    if(find.status===200){\r\n        yield put({type:MovieActionType.SET_MOVIE_DATA,payload:find.data});\r\n    }\r\n     yield put({type:MovieActionType.SET_IS_LOADING,payload:false})\r\n}","import {createStore,applyMiddleware} from \"redux\";\r\nimport { reducers } from \"./reducer\";\r\nimport {logger} from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport { movieSaga } from \"./saga/MovieSaga\";\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducers,applyMiddleware(sagaMiddleware,logger));\r\nsagaMiddleware.run(movieSaga);\r\nexport {store};\r\n","import React from 'react';\nimport {BrowserRouter,Route}from \"react-router-dom\"\nimport MovieIndex from './pages/PageIndex';\nimport {Provider}from \"react-redux\"\nimport { store } from './redux';\nfunction App() {\n  return (\n   <Provider store={store}>\n       <BrowserRouter>\n       <Route path=\"/\" component={MovieIndex}/>\n       </BrowserRouter>\n   </Provider>\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport  \"./index.css\"\n// import \"./testRedux\";\nimport 'antd/dist/antd.css';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport { ConfigProvider } from 'antd';\n\nReactDOM.render(\n     <ConfigProvider locale={zhCN}>\n       <App />\n     </ConfigProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}